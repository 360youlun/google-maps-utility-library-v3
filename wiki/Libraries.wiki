#summary List of libraries here and quick links to them

Below is a list of the libraries being worked on in this project, with links to their final released versions and their in-development versions. 



== !KeyDragZoom ==

This class allows a user to zoom in to an area on the map by holding down a hot key (e.g. Shift) while dragging a box around the area. Version 2.0 adds an optional visual control for turning zoom mode on and off.

Browse [http://google-maps-utility-library-v3.googlecode.com/svn/tags/keydragzoom/ Released Versions] or
[http://google-maps-utility-library-v3.googlecode.com/svn/trunk/keydragzoom/ Development Versions].


== !InfoBox ==

[http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/examples/infobox.png]

This class behaves like {{{google.maps.InfoWindow}}}, but it supports several additional properties for advanced styling. An !InfoBox can also be used as a map label.

Browse [http://google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/ Released Versions] or
[http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/ Development Versions].


== !MarkerClusterer ==

The library creates and manages per-zoom-level clusters for large amounts of markers.  This is a V3 implementation of the V2 !MarkerClusterer.

Browse [http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/ Released Versions] or
[http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/ Development Versions].

== !MarkerManager ==

This class is designed to manage adding and removing many points when the viewport changes.


Browse [http://google-maps-utility-library-v3.googlecode.com/svn/tags/markermanager/ Released Versions] or
[http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markermanager/ Development Versions].

== !RouteBoxer ==

This class creates a set of LatLngBounds that are guaranteed to enclose every point within a given distance of a Polyline. It is intended to support adding Search along a route to an application backed by a spatial database that supports bounds queries (such as the Google Maps Data API).


Browse [http://google-maps-utility-library-v3.googlecode.com/svn/tags/routeboxer/ Released Versions] or
[http://google-maps-utility-library-v3.googlecode.com/svn/trunk/routeboxer/ Development Versions].

== !ExtDraggableObject ==

This class sets up a DOM object to be draggable around the screen, similar to the V2 GDraggableObject. Has several extensions, such as the ability to restrict the object to vertical or horizontal only movement, move the object by a certain increment, or return the object to its original position before dragging started.


Browse [http://google-maps-utility-library-v3.googlecode.com/svn/tags/extdraggableobject/ Released Versions] or
[http://google-maps-utility-library-v3.googlecode.com/svn/trunk/ExtDraggableObject/ Development Versions].


== !MarkerWithLabel ==

[http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerwithlabel/examples/markerwithlabel-screen.png]

This class behaves like {{{google.maps.Marker}}}, but it supports the association of a label with the marker. If the marker is draggable, so too will be the label. In addition, a marker with a label responds to all mouse events in the same manner as a regular marker. It also fires mouse events and "property changed" events just as a regular marker would.

Browse [http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerwithlabel/ Released Versions]
or
[http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerwithlabel/ Development Versions].

== !StyledMarker ==

[http://google-maps-utility-library-v3.googlecode.com/svn/trunk/styledmarker/examples/styledMarker.png]

This class is a Marker that can be styled by changing its color, changing its shape, or adding text labels. Makes use of MVCObject to make changing styles for multiple markers easy.

Browse [http://google-maps-utility-library-v3.googlecode.com/svn/trunk/styledmarker/ Development Versions].